plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.sonarqube" version "4.2.1.3168"
    id "jacoco"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'mysql:mysql-connector-java:8.0.33'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    testImplementation 'com.h2database:h2' //this line cause problems sometimes related to auth.
//    testImplementation 'org.springframework.cloud:spring-cloud-starter-bootstrap:4.0.4'
//    testImplementation 'com.playtika.testcontainers:embedded-mysql:3.0.0-RC9'

}


jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = false
        html.required = true
    }
}



sonar{
    properties {
        property "sonar.projectKey", "Tuned"
        property "sonar.projectName", "Tuned"
        property("sonar.host.url", "http://localhost:9000")
        property "sonar.qualitygate.wait", false
        property "sonar.coverage.jacoco.xmlReportPaths", "${rootDir}/build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.coverage.exclusions", "**/src/main/java/com/example/tuned/Configuration/**,**/src/main/java/com/example/tuned/Persistence/**,**/src/main/java/com/example/tuned/Controller/**,**/src/main/java/com/example/tuned/Domain/**"

    }
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport

}
